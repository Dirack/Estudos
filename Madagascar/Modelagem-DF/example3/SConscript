#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# SConstruct (Python)
# 
# Purpose: Test sflanda89tomo in a layers constant velocity model
# with picked (t0,m0) pairs.
# 
# Site: https://dirack.github.io
# 
# Version 1.0
# 
# Programer: Rodolfo A C Neves (Dirack) 07/02/2021
# 
# Email: rodolfo_profissional@hotmail.com
# 
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

# Madagascar package
from rsf.proj import *

def arr2str(array,sep=' '):
        '''
        
        Convert a tuple into a comma separeted string
        
        :param array: tuple to be converted
        '''
        return sep.join(map(str,array))

# Constant velocity model for stereoniptomo
Flow('model',None,
     '''
     spike n1=301 d1=0.01 o1=0 n2=1001 d2=0.01 o2=-2 mag=1.508 |
     put label1=Depth unit1=km label2=Position unit2=km
     ''' )

# plot the model
Plot('model','model','grey color=j scalebar=y label1=Depth unit1=km label2=Position unit2=km barlabel=Velocity barunit=km/s barreverse=y title="Constant Velocity Model" allpos=y')

layer1 = ((0.9,1.00,1.20,0.90,1.00),)
layer2 = ((1.85,1.85,1.85,1.85,1.85),)

# Points of the cubic spline velocity function
#Flow('sza',None,'math n1=11 d1=1 o1=-2 output="1.0"')
#Flow('szb',None,'math n1=11 d1=1 o1=-2 output="1.8"')
Flow('sza.asc',None,
	'''
	echo %s
	n1=5 o1=-2 d1=2.5
	data_format=ascii_float in=$TARGET
	''' % (' '.join(map(arr2str,layer1))))

Flow('sza','sza.asc','dd form=native')

Flow('szb.asc',None,
	'''
	echo %s
	n1=5 o1=-2 d1=2.5
	data_format=ascii_float in=$TARGET
	''' % (' '.join(map(arr2str,layer2))))

Flow('szb','szb.asc','dd form=native')

Flow('sz_2',['sza','szb'],
	'''
	rcat ${SOURCES[1]} axis=1 |
        put n1=10
	''')

sz='sz_2'
#sz='sza'
sv='sv_2'
Flow(sv,None,
	'''
	spike nsp=3 mag=%s k1=1,2,3 n1=3
	'''%('1.5,1.7,2.0'))

Flow('model2',['model','sz_2','sv_2'],
	'''
	buildmodel sz=${SOURCES[1]} vz=${SOURCES[2]}
	''')

Result('model2','grey title="Velocity model" color=j scalebar=y barreverse=y barunit=Km/s label1=Depth label2=Distance unit1=Km unit2=Km barlabel=Velocity allpos=y bias=1.5')

Result('splinevellayer','model2',
	'''
	window n1=1 f1=150 | graph label1=Distance label2=Velocity title="Velocity variation - Second layer"
	''')

# Generate a modeled data cube
nt=1001
dt=0.004
nm=241
dm=0.025
nh=161
dh=0.025

kinewmod(reflectors='interfaces',
        reflectorsDip='interfacesDip',
        filename='multiLayerDataCube',
        velocities=velocities,
        nt=nt,
        dt=dt,
        ns=nm,
        ds=dm,
        nh=nh,
        dh=dh)

End()
